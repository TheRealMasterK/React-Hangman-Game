{"ast":null,"code":"var _jsxFileName = \"/Users/kylelloyd/Documents/GitHub/Hangman/src/components/WrongLetters.js\";\nimport React from 'react';\n\n//This component provides a space to show the wrong letters selected\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WrongLetters = _ref => {\n  let {\n    wrongLetters\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrong-letters-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [wrongLetters.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 41\n        }, this), wrongLetters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: letter\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 37\n        }, this))\n        //add commas in between spans\n        .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = WrongLetters;\nexport default WrongLetters;\nvar _c;\n$RefreshReg$(_c, \"WrongLetters\");","map":{"version":3,"names":["React","WrongLetters","wrongLetters","length","map","letter","i","reduce","prev","curr"],"sources":["/Users/kylelloyd/Documents/GitHub/Hangman/src/components/WrongLetters.js"],"sourcesContent":["import React from 'react'\n\n//This component provides a space to show the wrong letters selected\nconst WrongLetters = ({wrongLetters}) => {\n  return (\n    <div>\n       <div className=\"wrong-letters-container\">\n        <div>\n            {wrongLetters.length > 0 && <p>Wrong</p>}\n            {wrongLetters\n                .map((letter, i) => <span key={i}>{letter}</span>)\n                //add commas in between spans\n                .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null) } \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default WrongLetters\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,MAAMC,YAAY,GAAG,QAAoB;EAAA,IAAnB;IAACC;EAAY,CAAC;EAClC,oBACE;IAAA,uBACG;MAAK,SAAS,EAAC,yBAAyB;MAAA,uBACvC;QAAA,WACKA,YAAY,CAACC,MAAM,GAAG,CAAC,iBAAI;UAAA,UAAG;QAAK;UAAA;UAAA;UAAA;QAAA,QAAI,EACvCD,YAAY,CACRE,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBAAK;UAAA,UAAeD;QAAM,GAAVC,CAAC;UAAA;UAAA;UAAA;QAAA,QAAiB;QACjD;QAAA,CACCC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,KAAK,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,CAACD,IAAI,EAAE,IAAI,EAAEC,IAAI,CAAC,EAAE,IAAI,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAC5E;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KAdKR,YAAY;AAgBlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}