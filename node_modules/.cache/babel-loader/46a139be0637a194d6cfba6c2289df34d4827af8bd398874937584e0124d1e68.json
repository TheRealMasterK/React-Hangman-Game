{"ast":null,"code":"var _jsxFileName = \"/Users/kylelloyd/Documents/GitHub/Hangman/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  _s();\n  let {\n    playAgain\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Let's Play Hangman!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Type letters, to find the hidden word...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"helpButton\",\n        onClick: toggleModal,\n        children: \"Toggle Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"helpButton\",\n        onClick: playAgain,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructionsModal\",\n        style: {\n          display: showModal ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Game Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To play Hangman, you need to guess letters, until you identify the missing word below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You need to find the letter before you end up in the hangman's noose - so choose your letters carefully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If you win or lose, you can click Play Again, to reset the game. Good Luck!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Header, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Header","playAgain","showModal","setShowModal","toggleModal","display"],"sources":["/Users/kylelloyd/Documents/GitHub/Hangman/src/components/Header.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Header = ({playAgain}) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <>\n      <div className='titleDiv'>\n        <h1 className='title'>Let's Play Hangman!!</h1>\n        <p><em>Type letters, to find the hidden word...</em></p>\n        <button className='helpButton' onClick={toggleModal}>Toggle Help</button>\n        <button className='helpButton' onClick={playAgain}>Restart Game</button>\n        {/*The modal below is toggled visible / invisible by the button above\n          with some conditional in-line styling*/}\n        <div className='instructionsModal' style={{ display: showModal ? 'block' : 'none' }}>\n          <h5>Game Instructions</h5>\n          <p>To play Hangman, you need to guess letters, until you\n              identify the missing word below.</p>\n          <p>You need to find the letter before you end up in the \n              hangman's noose - so choose your letters carefully!</p>\n          <p>If you win or lose, you can click Play Again, to reset the\n              game. Good Luck!</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,MAAM,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAACC;EAAS,CAAC;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMK,WAAW,GAAG,MAAM;IACxBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB;QAAI,SAAS,EAAC,OAAO;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC/C;QAAA,uBAAG;UAAA,UAAI;QAAwC;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI,eACxD;QAAQ,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEE,WAAY;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS,eACzE;QAAQ,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEH,SAAU;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS,eAGxE;QAAK,SAAS,EAAC,mBAAmB;QAAC,KAAK,EAAE;UAAEI,OAAO,EAAEH,SAAS,GAAG,OAAO,GAAG;QAAO,CAAE;QAAA,wBAClF;UAAA,UAAI;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAK,eAC1B;UAAA,UAAG;QACiC;UAAA;UAAA;UAAA;QAAA,QAAI,eACxC;UAAA,UAAG;QACoD;UAAA;UAAA;UAAA;QAAA,QAAI,eAC3D;UAAA,UAAG;QACiB;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;AAEP,CAAC;AAAC,GA5BIF,MAAM;AAAA,KAANA,MAAM;AA8BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}